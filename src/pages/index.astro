---
import Layout from '../layouts/Layout.astro';
---
<script id="vertexShader" type="x-shader/x-vertex">
	void main() {
        gl_Position = vec4( position, 1.0 );
    }
</script>
<script id="fragmentShader" type="x-shader/x-fragment">
	#ifdef GL_ES
    precision mediump float;
    #endif

    uniform vec2 u_resolution;
    uniform vec2 u_mouse;
    uniform float u_time;

    vec3 palette (float t) {
        vec3 a = vec3(0.5, 0.5, 0.5);
        vec3 b = vec3(0.5, 0.5, 0.5);
        vec3 c = vec3(1.0, 1.0, 1.0);
        vec3 d = vec3(0.263, 0.416, 0.557);
        return a + b*cos(6.28318 * (c*t+d));
    }

    void main() {
        vec2 uv = (gl_FragCoord.xy * 2.0 - u_resolution.xy) / u_resolution.y;
        vec2 uv0 = uv;
        vec3 finalColor = vec3(0.0);


        for (float i = 0.0; i < 2.7; i++) {
            uv = fract(uv * 2.7) - 0.5;

            float d = length(uv) + u_time * exp(-length(uv0));

            vec3 color = palette(length(uv0) + i*.314 + u_time * 0.4);

            d = sin(d * 3.14 + u_time) / 2.7;
            d = abs(d);
            d = 0.0069 / d;

            finalColor += color * d;

        }



        gl_FragColor = vec4(finalColor, 1.0);
    }
</script>

<script>
	import * as THREE from 'three';
	console.log(THREE)
	var container;
	var camera, scene, renderer, clock;
	var uniforms;

	init();
	animate();

	function init() {
		container = document.getElementById( 'container' );

		camera = new THREE.Camera();
		camera.position.z = 1;

		scene = new THREE.Scene();
		clock = new THREE.Clock();

		var geometry = new THREE.PlaneGeometry( 2, 2 );

		uniforms = {
			u_time: { type: "f", value: 1.0 },
			u_resolution: { type: "v2", value: new THREE.Vector2() },
			u_mouse: { type: "v2", value: new THREE.Vector2() }
		};

		var material = new THREE.ShaderMaterial( {
			uniforms: uniforms,
			vertexShader: document.getElementById( 'vertexShader' ).textContent,
			fragmentShader: document.getElementById( 'fragmentShader' ).textContent
		} );

		var mesh = new THREE.Mesh( geometry, material );
		scene.add( mesh );

		renderer = new THREE.WebGLRenderer();
		renderer.setPixelRatio( window.devicePixelRatio );

		container.appendChild( renderer.domElement );

		onWindowResize();
		window.addEventListener( 'resize', onWindowResize, false );

		document.onmousemove = function(e){
			uniforms.u_mouse.value.x = e.pageX
			uniforms.u_mouse.value.y = e.pageY
		}
	}

	function onWindowResize( event ) {
		renderer.setSize( window.innerWidth, window.innerHeight );
		uniforms.u_resolution.value.x = renderer.domElement.width;
		uniforms.u_resolution.value.y = renderer.domElement.height;
	}

	function animate() {
		requestAnimationFrame( animate );
		render();
	}

	function render() {
		uniforms.u_time.value += clock.getDelta();
		renderer.render( scene, camera );
	}
</script>

<Layout title="Welcome to Astro.">
	<main class="h-full w-full">
		<div id="container"></div>
	</main>
</Layout>

